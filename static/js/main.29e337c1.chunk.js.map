{"version":3,"sources":["firebase/Firebase.js","contexts/AuthContext.js","img/movie-tickets.png","auth/Login.js","auth/PrivateRoute.js","contexts/RecordContext.js","containers/Home.js","auth/SignUp.js","components/NavBar.js","components/Card.js","components/ShowScore.js","containers/CardTable.js","components/StatusRow.js","components/Status.js","containers/App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","signup","email","password","history","a","createUserWithEmailAndPassword","onAuthStateChanged","user","push","alert","login","signInWithEmailAndPassword","useEffect","Provider","value","logout","signOut","then","catch","error","withRouter","useContext","className","src","logo","alt","onSubmit","event","preventDefault","target","elements","name","type","placeholder","to","PrivateRoute","component","rest","Component","Login","RecordContext","RecordProvider","recordData","setRecordData","getAllRecords","collection","doc","uid","get","recordCollection","forEach","record","data","sort","b","addNewRecord","time","attempt","accuracy","totals","add","attempts","total","Home","genreId","setGenreId","id","htmlFor","onChange","e","NavBar","exact","onClick","Card","props","cardStyle","numStyle","matchStatus","checkMatch","ShowScore","setTotals","totalScore","calculatedTime","calculatedAttempts","calculatedAccuracy","Math","ceil","title","window","location","reload","CardTable","state","genre","movieImgs","initialCards","Array","fill","cardStatus","message","count","timer","run","overlay","clicks","corrects","showScore","fetchMoviePics","page","floor","random","fetch","resp","json","results","combinedUrls","slicedUrls","slice","imgUrls","split","shuffle","map","url","array","i","length","j","isFinish","clearInterval","setState","setTimeout","cardClear","rollbacksts","cardReset","addRecord","gameStart","setInterval","countDown","flag","nextCount","numberOfClicks","revealedCards","renderCards","cards","card","index","this","pathname","movie","poster_path","StatusRow","rankClass","Status","setData","sortBtn","sortFilter","newRecord","App","basename","path","SignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29e337c1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig  = {\n    apiKey: \"AIzaSyBTLMtYYJFBeYUdluBj5URZOGAh5F4LE6Y\",\n    authDomain: \"matching-movie-pairs-8ee49.firebaseapp.com\",\n    projectId: \"matching-movie-pairs-8ee49\",\n    storageBucket: \"matching-movie-pairs-8ee49.appspot.com\",\n    messagingSenderId: \"586533732749\",\n    appId: \"1:586533732749:web:e6035660beb4c16b75fdc4\",\n    measurementId: \"G-MXVV55B5YS\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\nexport {auth, db}","import { createContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase/Firebase\";\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  //Sign up function.\n  //Update auth info after sign up\n  const signup = async (email, password, history) => {\n    try {\n      await auth.createUserWithEmailAndPassword(email, password);\n      auth.onAuthStateChanged(user => {\n        setCurrentUser(user);\n      });\n      history.push(\"/\");\n    } catch(error) {\n      alert(error);\n    }\n  };\n\n  //Log in function\n  const login = async (email, password, history) => {\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      auth.onAuthStateChanged(user => setCurrentUser(user));\n      history.push(\"/\");\n    } catch(error) {\n      alert(error);\n    }\n  }\n\n  //Log out function\n  const logout = () => {\n    auth.signOut()\n    .then()\n    .catch(error => alert(error));\n  }\n\n  //Check if the user is authenticated already at the first access time\n  useEffect(() => {\n    auth.onAuthStateChanged(setCurrentUser);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ signup, login, logout, currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport { AuthContext, AuthProvider }","export default __webpack_public_path__ + \"static/media/movie-tickets.d9e077c3.png\";","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport \"../style/Auth.css\";\nimport logo from \"../img/movie-tickets.png\";\n\nconst Login = ({ history }) => {\n    const { login } = useContext(AuthContext);\n\n    //Get login function from AuthContext\n    const handleSubmit = event => {\n        event.preventDefault();\n        const { email, password } = event.target.elements;\n        login(email.value, password.value, history);\n    };\n\n    return (\n        <div>\n            <div className=\"login\">\n                <div className=\"logoContainer\">\n                    <img className=\"movieicon\" src={logo} alt=\"logo\"></img>\n                    <p className=\"main-title\">Matching Movie</p>\n                    <p className=\"main-title\">Pairs</p>\n                </div>\n                <h1>LOGIN</h1>\n                <form onSubmit={handleSubmit}>\n                    <label className=\"labels\">Email</label>\n                    <input name=\"email\" type=\"email\" placeholder=\"Email\" />\n                    <label className=\"labels\">Password</label>\n                    <input name=\"password\" type=\"password\" placeholder=\"Password\" />\n                    <button className=\"btn btn-primary btn-block btn-large\" type=\"submit\">Log in</button>\n                </form>\n                <button className=\"createBtn\">\n                    <Link to=\"/signup\" className=\"createLink\">Create Your New Account</Link>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Login);","import React, { useContext } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport Login from \"./Login\";\n\nconst PrivateRoute = ({ component, ...rest }) => {\n    const { currentUser } = useContext(AuthContext);\n    //When currentUser return true then component = Home\n    //If return value is false then jump to Login component\n    const Component = currentUser ? component : Login;\n\n    return <Route {...rest} component={Component} />;\n};\n\nexport default PrivateRoute;","import { createContext, useState, useEffect, useContext } from \"react\";\nimport { db } from \"../firebase/Firebase\";\nimport { AuthContext } from \"./AuthContext\";\n\nconst RecordContext = createContext();\n\nconst RecordProvider = ({ children }) => {\n    const { currentUser } = useContext(AuthContext);\n    const [ recordData, setRecordData ] = useState([]);\n\n    const addNewRecord = (time, attempt, accuracy, totals, user) => {\n        db.collection(\"users\").doc(user.uid).collection(\"recordData\").add({\n            time: time,\n            attempts: attempt,\n            accuracy: accuracy,\n            total: totals\n        })\n    }\n\n    const getAllRecords = async user => {\n        if(user){\n            const recordCollection = await db.collection(\"users\").doc(user.uid).collection(\"recordData\").get();\n            const collection = []\n            recordCollection.forEach(async record => {\n                const data = await record.data()\n                collection.push(data)\n                collection.sort((a,b) => b[\"total\"] - a[\"total\"])\n            });\n            setRecordData(collection)\n        }\n    }\n\n    useEffect(() => {\n        getAllRecords(currentUser);\n    }, [currentUser])\n\n    return(\n        <RecordContext.Provider value={{ recordData, addNewRecord, getAllRecords }} >\n            {children}\n        </RecordContext.Provider>\n    )\n}\n\nexport { RecordContext, RecordProvider };","import React from \"react\";\nimport \"../style/Home.css\";\nimport logo from \"../img/movie-tickets.png\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Home = () => {\n\n    const [ genreId, setGenreId ] = useState(28);\n    const handleChange = e => {\n        setGenreId(e.target.value);\n    }\n\n    return (\n        <div id=\"home\">\n            <div className=\"title-space\">\n                <div className=\"logoContainer\">\n                    <img className=\"movieicon\" src={logo} alt=\"logo\"></img>\n                    <p className=\"main-title\">Matching Movie</p>\n                    <p className=\"main-title\">Pairs</p>\n                </div>\n            </div>\n            <div className=\"welcome-comment\">\n                <h3 className=\"welcome-title\">Welcome to Matching Movie Pairs</h3>\n                <p>How to play</p>\n                <p className=\"left-side\">\n                Step 1 : Select your favourite movie genre.<br/>\n                Step 2 : Press Start Button.<br/>\n                Step 3 : Click and find right movie pairs.</p>\n                <p>When you complete, you will see your score in status</p>\n                <p>Enjoy!</p>\n            </div>\n            <div className=\"select-start\">\n                <label className=\"genreTxt\" htmlFor=\"genres\">Select a genre to play with</label>\n                <div className=\"box\">\n                    <select onChange={handleChange}>\n                        <option value=\"28\">Action</option>\n                        <option value=\"12\">Adventure</option>\n                        <option value=\"16\">Animation</option>\n                        <option value=\"35\">Comedy</option>\n                        <option value=\"80\">Crime</option>\n                        <option value=\"99\">Documentary</option>\n                        <option value=\"18\">Drama</option>\n                        <option value=\"10751\">Family</option>\n                        <option value=\"14\">Fantasy</option>\n                        <option value=\"36\">History</option>\n                        <option value=\"27\">Horror</option>\n                        <option value=\"10402\">Music</option>\n                        <option value=\"9648\">Mystery</option>\n                        <option value=\"10749\">Romance</option>\n                        <option value=\"878\">Science</option>\n                        <option value=\"878\">Fiction</option>\n                        <option value=\"53\">Thriller</option>\n                        <option value=\"10770\">TV Movie</option>\n                        <option value=\"10752\">War</option>\n                        <option value=\"37\">Western</option>\n                    </select>\n                </div>\n                <Link to={\"/game/\" + genreId} className=\"btn-gradient-3d-orange\">START</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport \"../style/Auth.css\";\nimport logo from \"../img/movie-tickets.png\";\n\nconst SignUp = ({ history }) => {\n  const { signup } = useContext(AuthContext);\n  //Get signup function from AuthContext\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { email, password } = event.target.elements;\n    signup(email.value, password.value, history);\n  };\n\n  return (\n    <div>\n      <div className=\"login\">\n        <div className=\"logoContainer\">\n          <img className=\"movieicon\" src={logo} alt=\"logo\"></img>\n          <p className=\"main-title\">Matching Movie</p>\n          <p className=\"main-title\">Pairs</p>\n        </div>\n        <h1>SIGNUP</h1>\n        <form onSubmit={handleSubmit}>\n          <label className=\"labels\">Email</label>\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\n          <label className=\"labels\">Password</label>\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\n          <button className=\"btn btn-primary btn-block btn-large\" type=\"submit\">Sign Up</button>\n        </form>\n        <button className=\"createBtn\">\n          <Link to=\"/login\" className=\"createLink\">Go back to Login</Link>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(SignUp);","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport \"../style/Home.css\";\n\nconst NavBar = () => {\n    const { logout } = useContext(AuthContext);\n    const handleSubmit = () => {\n        logout();\n    }\n\n    return (\n        <div className=\"navbar\">\n            <NavLink to=\"/\" exact>Home</NavLink>\n            <NavLink to=\"/game\" exact>Game</NavLink>\n            <NavLink to=\"/status\" exact>Status</NavLink>\n            <button className=\"btn\" type=\"submit\" onClick={handleSubmit}>Log Out</button>\n        </div>\n    )\n}\n\nexport default NavBar;","import React from \"react\";\nimport \"../style/Img.css\";\n\nconst Card = props => {\n    let cardStyle = 'card card-back';\n    let numStyle = 'front';\n    switch(props.matchStatus){\n        case 1:\n            numStyle = 'back';\n            break;\n        case 2:\n            numStyle = \"back matched\";\n            break;\n        case 3:\n            numStyle = \"back unmached\";\n            break;\n        default:\n            cardStyle = 'card card-front';\n            break;\n    }\n\n    const handleClick = () => {\n        props.checkMatch(props.value, props.id);\n    }\n    \n    return (\n        <button className={cardStyle} onClick={handleClick}>\n            <div className={numStyle}><img className=\"imgStyle\" src={`https://image.tmdb.org/t/p/original/${props.value}`} alt=\"movie\"></img></div>\n        </button>\n    );\n}\n\nexport default Card;","import { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { RecordContext } from \"../contexts/RecordContext\";\n \nconst ShowScore = (props) => {\n\n    const { currentUser } = useContext(AuthContext);\n    const { addNewRecord } = useContext(RecordContext);\n    const [ totals, setTotals] = useState(null);\n\n    const totalScore = () => {\n        const time = props.time;\n        const attempts = props.attempts;\n        const accuracy = props.accuracy;\n        let calculatedTime = 0;\n        let calculatedAttempts = 0;\n        let calculatedAccuracy = 0;\n        \n        if(time <= 100 && time >= 70){\n            calculatedTime = time * 2;\n        } else if(time < 70 && time >= 40){\n            calculatedTime = time * 1.5;\n        } else {\n            calculatedTime = time * 1.25;\n        }\n\n        if(attempts >= 10 && attempts <= 13){\n            calculatedAttempts = attempts * 2.75;\n        } else if(attempts > 13 && attempts <= 17){\n            calculatedAttempts = attempts * 1.75;\n        } else {\n            calculatedAttempts = attempts * 1.25;\n        }\n\n        if(accuracy >= 65){\n            calculatedAccuracy = accuracy * 2.5;\n        } else if(accuracy < 65 && accuracy >= 40){\n            calculatedAccuracy = accuracy * 2;\n        } else {\n            calculatedAccuracy = accuracy * 1.5;\n        }\n        const totalScore = Math.ceil(calculatedTime + calculatedAttempts + calculatedAccuracy)\n        return totalScore;\n    }\n\n    const windowReload = () => {\n        window.location.reload();\n    }\n\n    useEffect(() => {\n        setTotals(totalScore);\n        if(totals !== null && currentUser){\n            addNewRecord(props.time, props.attempts, props.accuracy, totals, currentUser);\n        }\n    }, [totals])\n                \n    return(\n        <div className=\"scoreContainer\">\n            <p className=\"scoreTitle\">{props.title}</p>\n            <p className=\"score\"><span className=\"scoreDetail\" id=\"timeColor\">TIME</span><span className=\"scoreNumber\">{props.time}/100</span></p>\n            <p className=\"score\"><span className=\"scoreDetail\" id=\"attemptColor\">ATTEMPTS</span><span className=\"scoreNumber\">{props.attempts}/10 min</span></p>\n            <p className=\"score\"><span className=\"scoreDetail\" id=\"accuracyColor\">ACCURACY</span><span className=\"scoreNumber\">{props.accuracy}%/100%</span></p>\n            <hr/>\n            <p className=\"score\"><span className=\"scoreDetail\">TOTAL</span><span className=\"scoreNumber\">{totalScore()}pt</span></p>\n            <button className=\"playAgain\" onClick={windowReload}>Play Again</button>\n            <button className=\"scores\"><Link to=\"/status\" className=\"scoreLink\">Scores</Link></button>\n        </div>\n    )\n}\n\nexport default ShowScore;","import { Component } from \"react\";\nimport Card from \"../components/Card\";\nimport \"../style/Img.css\";\nimport ShowScore from \"../components/ShowScore\";\n\n\nclass CardTable extends Component {\n\n    state = {\n        genre: 28,\n        movieImgs: [],\n        initialCards: [],\n        matchStatus: Array(20).fill(0),\n        cardStatus: -1,\n        message: \"\",\n        count: 100,\n        timer: null,\n        title:  \"\",\n        run:    false,\n        overlay: 'overlay',\n        record: {\n            attempts: 0,\n            clicks: 0,\n            corrects: 0,\n            accuracy: 0\n        },\n        showScore: false\n    }\n\n    fetchMoviePics = async() => {\n        const page = Math.floor(Math.random() * 501);\n        const resp = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=8afb33342826c0533464840a6694a7df&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&without_genres=${this.state.genre}&with_watch_monetization_types=flatrate`)\n        const data = await resp.json();\n        return data.results;\n    }\n\n    async componentDidMount() {\n        const genreId = this.props.location.pathname.split(\"/\")[2];\n        this.setState({\n            genre: genreId\n        })\n        const movies = await this.fetchMoviePics();\n        movies.map(movie => {\n            if (movie.poster_path !== null) {\n                this.setState({\n                    movieImgs: [...this.state.movieImgs, movie.poster_path]\n                })\n            }\n        })\n        this.setState({\n            initialCards: this.combinedUrls(this.state.movieImgs)\n        })\n    }\n\n    combinedUrls = movieImgs => {\n        let slicedUrls = movieImgs.slice(0, 10);\n        let imgUrls = (slicedUrls + \",\" + slicedUrls).split(\",\");\n        imgUrls = this.shuffle(imgUrls);\n        return imgUrls.map(url => url)\n    }\n\n    shuffle = ([...array]) => {\n        for(let i = array.length -1; i >= 0; i--){\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    }\n\n    checkMatch = (value, id) => {\n        let matchStatus = this.state.matchStatus.slice();\n        let { corrects } = this.state.record;\n        if(this.state.matchStatus[id] !== 0){\n            return;\n        }\n        let run = this.state.run;\n        if(!run){\n            return\n        }\n\n        let cardStatus = -1,\n            message = \"\",\n            title = \"\",\n            overlay = \"\";\n        if(this.state.cardStatus === -2){\n            return;\n        } else if(this.state.cardStatus === -1){\n            matchStatus[id] = 1;\n            cardStatus = id;\n        } else if(this.state.cardStatus !== id){\n            matchStatus[id] = 1;\n            if(this.state.initialCards[this.state.cardStatus] === value){\n                message = \"Matched!\";\n                matchStatus[this.state.cardStatus] = 2;\n                matchStatus[id] = 2;\n                corrects += 2;\n                if(!this.isFinish(matchStatus)){\n                    setTimeout(() => {\n                        this.cardClear();\n                    }, 1000);\n                } else {\n                    message = \"\";\n                    run = false;\n                    title = \"Congratulations!\";\n                    overlay = \"overlay overlay-end\";\n                    clearInterval(this.state.timer);\n                    this.setState({showScore: true})\n                }\n            } else {\n                message = \"Unmatched!\";\n                cardStatus = -2;\n                matchStatus[this.state.cardStatus] = 3;\n                matchStatus[id] = 3;\n                const rollbacksts = this.state.matchStatus.slice();\n                rollbacksts[this.state.cardStatus] = 0;\n                rollbacksts[id] = 0;\n                setTimeout(() => {\n                    this.cardClear();\n                    this.cardReset(rollbacksts);\n                }, 1000);\n            }\n        }\n        this.addRecord(corrects);\n        this.setState({\n            matchStatus: matchStatus,\n            cardStatus: cardStatus,\n            message: message,\n            run: run,\n            title: title,\n            overlay: overlay\n        });\n    }\n\n    gameStart = () => {\n        if(this.state.run){\n            return;\n        }\n        const timer = setInterval(() => this.countDown(), 1000);\n        this.setState({\n            timer: timer,\n            run: true,\n            overlay: \"\"\n        });\n    }\n\n    cardReset = (matchStatus) => {\n        this.setState({\n            matchStatus: matchStatus,\n            cardStatus: -1\n        });\n    }\n\n    cardClear = () => {\n        this.setState({\n            message: \"\"\n        })\n    }\n\n    isFinish = (matchStatus) => {\n        let flag = true;\n        for (let i = 0; i < matchStatus.length; i++) {\n            if(matchStatus[i] !== 2){\n                flag = false;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    countDown = () => {\n        let nextCount = this.state.count - 1;\n        if(nextCount < 1){\n            this.setState({\n                message: \"\",\n                count: 0,\n                run: false,\n                title: \"Game Over\",\n                overlay: \"overlay overlay-end\"\n            });\n            clearInterval(this.state.timer);\n        } else {\n            this.setState({\n                count: nextCount\n            });\n        }\n    }\n\n    addRecord = corrects => {\n        const { clicks } = this.state.record;\n        const numberOfClicks = clicks + 1;\n        const attempts = Math.floor(numberOfClicks / 2);\n        const revealedCards = Math.ceil((20 - (20 - corrects)) / 2);\n        const accuracy = Math.floor(revealedCards ? (revealedCards / attempts) * 100 : 0);\n        this.setState({\n            record: {\n                clicks: numberOfClicks,\n                attempts,\n                corrects,\n                accuracy\n            }\n        });\n    }\n\n    renderCards = (cards, matchStatus) => {\n        return this.state.movieImgs.length === this.state.initialCards.length\n        ?\n        cards.map((card, index) => {\n            return(\n                <Card \n                    key={index}\n                    value={card}\n                    id={index}\n                    matchStatus={matchStatus[index]}\n                    checkMatch={this.checkMatch}\n                />\n            );\n        })\n        : <h1>Loading</h1>\n    }\n\n    render(){\n        const { attempts, accuracy } = this.state.record;\n        return(\n            <div>\n                <div className=\"status-container\">\n                    <button className=\"start-button\" onClick={this.gameStart}>Game Start</button>\n                    <div className=\"count-number\">Time: {this.state.count}</div>\n                    <div className=\"gameStatus\">Attempts: {attempts}</div>\n                    <div className=\"gameStatus\">Accuracy: {accuracy}%</div>\n                </div>\n                <div className=\"table\">\n                    {this.renderCards(this.state.initialCards, this.state.matchStatus)}\n                    <div className={this.state.overlay}><p className=\"title\">{this.state.title}</p></div>\n                </div>\n                {this.state.showScore \n                ? <ShowScore time={this.state.count} attempts={attempts} accuracy={accuracy} title={this.state.title} /> \n                : <><div className=\"gameStatus\">{this.state.title}</div></>}\n            </div>\n        )\n    }\n}\n\nexport default CardTable;","import \"../style/record.css\";\n\nconst StatusRow = props => {\n    let rankClass;\n    switch(props.index + 1){\n        case 1: \n            rankClass = \"gold\";\n            break;\n        case 2:\n            rankClass = \"silver\";\n            break;\n        case 3:\n            rankClass = \"bronze\";\n            break;\n        default: \n            rankClass = \"others\";\n            break;\n    }\n\n    return(\n        <tr className={rankClass}>\n            <td>{props.index + 1}</td>\n            <td>{props.data.time}</td>\n            <td>{props.data.attempts}</td>\n            <td>{props.data.accuracy}</td>\n            <td>{props.data.total}</td>\n        </tr>\n    )\n}\n\nexport default StatusRow;","import { useState, useContext, useEffect } from \"react\";\nimport \"../style/record.css\";\nimport { RecordContext } from \"../contexts/RecordContext\";\nimport StatusRow from \"./StatusRow\";\n\nconst Status = () => {\n    \n    const { recordData } = useContext(RecordContext);\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        setData(recordData)\n    }, [recordData])\n\n    const sortBtn = e => {\n        let sortFilter = e.target.value;\n        const newRecord = recordData.sort((a, b) => b[sortFilter] - a[sortFilter])\n        setData([...newRecord])\n    }\n\n    return (\n        <div>\n            <table className=\"recordTable\">\n                <tbody>\n                    <tr>\n                        <th>Rank</th>\n                        <th>Time <button className=\"triangleBtn\" value=\"time\" onClick={sortBtn}>▼</button></th>\n                        <th>Attempts <button className=\"triangleBtn\" value=\"attempts\" onClick={sortBtn}>▼</button></th>\n                        <th>Accuracy <button className=\"triangleBtn\" value=\"accuracy\" onClick={sortBtn}>▼</button></th>\n                        <th>Total <button className=\"triangleBtn\" value=\"total\" onClick={sortBtn}>▼</button></th>\n                    </tr>\n                    {data.map((data, index)=> <StatusRow data={data} index={index}/>)}\n                </tbody>\n            </table>\n            {/* <button onClick={sortFnc}>Sort button</button> */}\n        </div>\n    )\n}\n\nexport default Status;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport PrivateRoute from \"../auth/PrivateRoute\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport { RecordProvider } from \"../contexts/RecordContext\";\nimport \"../style/App.css\";\nimport Home from \"./Home\";\nimport Login from \"../auth/Login\";\nimport SignUp from \"../auth/SignUp\";\nimport NavBar from \"../components/NavBar\";\nimport CardTable from \"./CardTable\";\nimport Status from \"../components/Status\";\n\n\nconst App = () => {\n    return (\n        <AuthProvider>\n            <RecordProvider>\n                <Router basename=\"/MatchingMoviePairs\">\n                    <NavBar />\n                        <PrivateRoute exact path=\"/\" component={Home} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/signup\" component={SignUp} />\n                        <Route path=\"/game\" component={CardTable} />\n                        <Route exact path=\"/status\" component={Status} />\n                </Router>\n            </RecordProvider>\n        </AuthProvider>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}